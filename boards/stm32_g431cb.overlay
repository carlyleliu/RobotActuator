/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright (c) 2022 STMicroelectronics
 */

/ {
    chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	leds {
		compatible = "gpio-leds";
		green_led: led_0 {
			gpios = <&gpiob 2 GPIO_ACTIVE_LOW>;
			label = "User LD1";
		};
        red_led: led_1 {
			gpios = <&gpiob 12 GPIO_ACTIVE_LOW>;
			label = "User LD2";
		};
	};

	pwmleds {
		compatible = "pwm-leds";
	};

	aliases {
		led0 = &green_led;
        led1 = &red_led;
        qdec2 = &qdec2;
        qdec3 = &qdec3;
	};

    timer_pwms{
		compatible = "pwms-spec";
		pwm_spec: pwms {
			pwms = <&pwm1 1 50000 PWM_POLARITY_NORMAL>,
				   <&pwm1 2 50000 PWM_POLARITY_NORMAL>,
                   <&pwm1 3 50000 PWM_POLARITY_NORMAL>,
                   <&pwm1 4 50000 PWM_POLARITY_NORMAL>;
			pwm-names = "pwm1_ch1", "pwm1_ch2", "pwm1_ch3", "pwm1_ch4";
		};
	};

    zephyr,user {
		/* adjust channel number according to pinmux in board.dts */
		io-channels = <&adc1 1>, <&adc1 2>, <&adc1 3>;
	};

};

&spi1 {
    cs-gpios = <&gpioa 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    status = "okay";
    /*
    icm-42688@0 {
        compatible = "invensense,icm42688";
        reg = <0x0>;
        int-gpios = <&gpiob 11 GPIO_ACTIVE_HIGH>;
        accel-hz = <1000>;
        gyro-hz = <1000>;
        accel-fs = <16>;
        gyro-fs = <2000>;
        spi-max-frequency = <12000000>;
        status = "okay";
    };
    */
    tle5012b@0 {
        compatible = "infineon,gmr";
        reg = <0x0>;
        spi-max-frequency = <8000000>;
        resolution = <15>;
        status = "okay";
    };
};

&pwm1 {
	status = "okay";
	pinctrl-0 = <&tim1_ch1_pa8 &tim1_ch2_pa9 &tim1_ch3_pa10 &tim1_ch4_pa11>;
	pinctrl-names = "default";
};

&timers2 {
	status = "okay";
    qdec2: qdec {
		status = "disabled";
		pinctrl-0 = <&tim2_ch1_pa0 &tim2_ch2_pa1>;
		pinctrl-names = "default";
		st,input-polarity-inverted;
		st,input-filter-level = <15>;
		st,counts-per-revolution = <16>;
	};
    counter2: counter {
		compatible = "st,stm32-counter";
		status = "okay";
        label = "COUNTER_2";
	};
};

&timers3 {
	st,prescaler = <1>;
	status = "okay";

    qdec3: qdec {
		status = "disabled";
		pinctrl-0 = <&tim3_ch1_pb4 &tim3_ch2_pa4>;
		pinctrl-names = "default";
		st,input-polarity-inverted;
		st,input-filter-level = <15>;
		st,counts-per-revolution = <16>;
	};
    counter3: counter {
		compatible = "st,stm32-counter";
		status = "okay";
        label = "COUNTER_3";
	};
};

&timers4 {
	st,prescaler = <1>;
	status = "okay";
    counter4: counter {
		compatible = "st,stm32-counter";
		status = "okay";
        label = "COUNTER_4";
	};
};
&adc1 {
	pinctrl-0 = <&adc1_in1_pa0 &adc1_in2_pa1 &adc1_in3_pa2>;
	pinctrl-names = "default";
	status = "okay";
    #address-cells = <1>;
    #size-cells = <0>;

    channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
        zephyr,oversampling = <4>;
    };

    channel@2 {
		reg = <2>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
        zephyr,oversampling = <4>;
    };

    channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
        zephyr,oversampling = <4>;
    };
};
